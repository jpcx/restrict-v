"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const deepFreeze_1 = require("./deepFreeze");
exports.DeepFreeze = deepFreeze_1.DeepFreeze;
const deepFreeze = new deepFreeze_1.DeepFreeze();
const restrict_1 = require("./restrict");
exports.restrict = restrict_1.restrict;
const restriction_1 = require("./restriction");
exports.Restriction = restriction_1.Restriction;
const restrictionError_1 = require("./restrictionError");
exports.RestrictionError = restrictionError_1.RestrictionError;
deepFreeze(this);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFxQ0EsNkNBQTBDO0FBNEJ6QyxxQkE1QlEsdUJBQVUsQ0E0QlI7QUEzQlgsTUFBTSxVQUFVLEdBQUcsSUFBSSx1QkFBVSxFQUFFLENBQUM7QUFFcEMseUNBQXNDO0FBNEJyQyxtQkE1QlEsbUJBQVEsQ0E0QlI7QUEzQlQsK0NBQTRDO0FBNEIzQyxzQkE1QlEseUJBQVcsQ0E0QlI7QUEzQloseURBQXNEO0FBNEJyRCwyQkE1QlEsbUNBQWdCLENBNEJSO0FBVWpCLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSByZXN0cmljdC12XG4gKi9cblxuLyoqXG4gKiBAYXV0aG9yICBKdXN0aW4gQ29sbGllciA8anBjeGlzdEBnbWFpbC5jb20+XG4gKiBAbGljZW5zZSBHUEwtMy4wLW9yLWxhdGVyXG4gKiBAc2VlIHtAbGluayBodHRwOi8vZ2l0aHViLmNvbS9qcGN4L3Jlc3RyaWN0LXZ8R2l0SHVifVxuICovXG5cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gICpcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX18gICAgICAgICAuX18gICAgICAgIF9fICAgICAgICAgICAgICAgICAgICAgICpcbiAqICAgIF9fX19fX18gICBfX19fICAgX19fX19fXy8gIHxfX19fX19fX3xfX3wgX19fX18vICB8XyAgICAgICAgICBfX18gIF9fICAgICpcbiAqICAgIFxcXyAgX18gXFxfLyBfXyBcXCAvICBfX18vXFwgICBfX1xcXyAgX18gXFwgIHwvIF9fX1xcICAgX19cXCAgX19fX19fIFxcICBcXC8gLyAgICAqXG4gKiAgICAgfCAgfCBcXC9cXCAgX19fLyBcXF9fXyBcXCAgfCAgfCAgfCAgfCBcXC8gIFxcICBcXF9fX3wgIHwgICAvX19fX18vICBcXCAgIC8gICAgICpcbiAqICAgICB8X198ICAgIFxcX19fICA+X19fXyAgPiB8X198ICB8X198ICB8X198XFxfX18gID5fX3wgICAgICAgICAgICAgXFxfLyAgICAgICpcbiAqICAgICAgICAgICAgICAgICBcXC8gICAgIFxcLyAgICAgICAgICAgICAgICAgICAgICBcXC8gICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgIFJ1bnRpbWUgVmFsdWUgUmVzdHJpY3RvciAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gICpcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSAgICAgICpcbiAqICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSAgICAgICpcbiAqICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAgICAgICAgICpcbiAqICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgICAgICAgICAgICpcbiAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW50ZXJuYWxpZWQgd2FycmFudHkgb2YgICAgICAgICpcbiAqICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlICAgICAgICAgICAgICpcbiAqICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSAgICAgICAgICpcbiAqICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAgICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG5cbmltcG9ydCB7IERlZXBGcmVlemUgfSBmcm9tIFwiLi9kZWVwRnJlZXplXCI7XG5jb25zdCBkZWVwRnJlZXplID0gbmV3IERlZXBGcmVlemUoKTtcblxuaW1wb3J0IHsgcmVzdHJpY3QgfSBmcm9tIFwiLi9yZXN0cmljdFwiO1xuaW1wb3J0IHsgUmVzdHJpY3Rpb24gfSBmcm9tIFwiLi9yZXN0cmljdGlvblwiO1xuaW1wb3J0IHsgUmVzdHJpY3Rpb25FcnJvciB9IGZyb20gXCIuL3Jlc3RyaWN0aW9uRXJyb3JcIjtcblxuaW1wb3J0IHtcblx0QXNzZXJ0aW9uLFxuXHRDb25kaXRpb25hbCxcblx0Q29uZGl0aW9uYWxUYXJnZXQsXG5cdENvbnN0cnVjdG9yRnVuY3Rpb24sXG5cdFBhc3N0aHJvdWdoVmFsaWRhdG9yLFxuXHRQcmVkaWNhdGUsXG5cdFJlc3RyaWN0aW9uVGFyZ2V0LFxuXHRSZXN0cmljdGlvblRhcmdldFR5cGUsXG5cdFNjaGVtYSxcblx0U2NoZW1hVGFyZ2V0LFxuXHRTY2hlbWFUYXJnZXRUeXBlLFxuXHRTY2hlbWFUYXJnZXRWYWx1ZVR5cGUsXG5cdFNjaGVtYVZhbHVlVHlwZVxufSBmcm9tIFwiLi90eXBlc1wiO1xuXG5leHBvcnQge1xuXHRBc3NlcnRpb24sXG5cdENvbmRpdGlvbmFsLFxuXHRDb25kaXRpb25hbFRhcmdldCxcblx0Q29uc3RydWN0b3JGdW5jdGlvbixcblx0RGVlcEZyZWV6ZSxcblx0UGFzc3Rocm91Z2hWYWxpZGF0b3IsXG5cdFByZWRpY2F0ZSxcblx0cmVzdHJpY3QsXG5cdFJlc3RyaWN0aW9uLFxuXHRSZXN0cmljdGlvbkVycm9yLFxuXHRSZXN0cmljdGlvblRhcmdldCxcblx0UmVzdHJpY3Rpb25UYXJnZXRUeXBlLFxuXHRTY2hlbWEsXG5cdFNjaGVtYVRhcmdldCxcblx0U2NoZW1hVGFyZ2V0VHlwZSxcblx0U2NoZW1hVGFyZ2V0VmFsdWVUeXBlLFxuXHRTY2hlbWFWYWx1ZVR5cGVcbn07XG5cbmRlZXBGcmVlemUodGhpcyk7XG4iXX0=